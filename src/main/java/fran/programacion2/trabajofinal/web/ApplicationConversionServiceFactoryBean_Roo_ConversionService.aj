// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fran.programacion2.trabajofinal.web;

import fran.programacion2.trabajofinal.domain.Hashtag;
import fran.programacion2.trabajofinal.domain.Mensaje;
import fran.programacion2.trabajofinal.domain.Photo;
import fran.programacion2.trabajofinal.domain.Referencia;
import fran.programacion2.trabajofinal.domain.Role;
import fran.programacion2.trabajofinal.domain.SeguidoresSeguidos;
import fran.programacion2.trabajofinal.domain.User;
import fran.programacion2.trabajofinal.domain.UserRole;
import fran.programacion2.trabajofinal.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Hashtag, String> ApplicationConversionServiceFactoryBean.getHashtagToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fran.programacion2.trabajofinal.domain.Hashtag, java.lang.String>() {
            public String convert(Hashtag hashtag) {
                return new StringBuilder().append(hashtag.getHash()).toString();
            }
        };
    }
    
    public Converter<Long, Hashtag> ApplicationConversionServiceFactoryBean.getIdToHashtagConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fran.programacion2.trabajofinal.domain.Hashtag>() {
            public fran.programacion2.trabajofinal.domain.Hashtag convert(java.lang.Long id) {
                return Hashtag.findHashtag(id);
            }
        };
    }
    
    public Converter<String, Hashtag> ApplicationConversionServiceFactoryBean.getStringToHashtagConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fran.programacion2.trabajofinal.domain.Hashtag>() {
            public fran.programacion2.trabajofinal.domain.Hashtag convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Hashtag.class);
            }
        };
    }
    
    public Converter<Mensaje, String> ApplicationConversionServiceFactoryBean.getMensajeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fran.programacion2.trabajofinal.domain.Mensaje, java.lang.String>() {
            public String convert(Mensaje mensaje) {
                return new StringBuilder().append(mensaje.getTexto()).append(' ').append(mensaje.getFechaPublicacion()).toString();
            }
        };
    }
    
    public Converter<Long, Mensaje> ApplicationConversionServiceFactoryBean.getIdToMensajeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fran.programacion2.trabajofinal.domain.Mensaje>() {
            public fran.programacion2.trabajofinal.domain.Mensaje convert(java.lang.Long id) {
                return Mensaje.findMensaje(id);
            }
        };
    }
    
    public Converter<String, Mensaje> ApplicationConversionServiceFactoryBean.getStringToMensajeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fran.programacion2.trabajofinal.domain.Mensaje>() {
            public fran.programacion2.trabajofinal.domain.Mensaje convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Mensaje.class);
            }
        };
    }
    
    public Converter<Photo, String> ApplicationConversionServiceFactoryBean.getPhotoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fran.programacion2.trabajofinal.domain.Photo, java.lang.String>() {
            public String convert(Photo photo) {
                return new StringBuilder().append(photo.getFilename()).append(' ').append(photo.getContentType()).append(' ').append(photo.getUrl()).toString();
            }
        };
    }
    
    public Converter<Long, Photo> ApplicationConversionServiceFactoryBean.getIdToPhotoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fran.programacion2.trabajofinal.domain.Photo>() {
            public fran.programacion2.trabajofinal.domain.Photo convert(java.lang.Long id) {
                return Photo.findPhoto(id);
            }
        };
    }
    
    public Converter<String, Photo> ApplicationConversionServiceFactoryBean.getStringToPhotoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fran.programacion2.trabajofinal.domain.Photo>() {
            public fran.programacion2.trabajofinal.domain.Photo convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Photo.class);
            }
        };
    }
    
    public Converter<Referencia, String> ApplicationConversionServiceFactoryBean.getReferenciaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fran.programacion2.trabajofinal.domain.Referencia, java.lang.String>() {
            public String convert(Referencia referencia) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Referencia> ApplicationConversionServiceFactoryBean.getIdToReferenciaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fran.programacion2.trabajofinal.domain.Referencia>() {
            public fran.programacion2.trabajofinal.domain.Referencia convert(java.lang.Long id) {
                return Referencia.findReferencia(id);
            }
        };
    }
    
    public Converter<String, Referencia> ApplicationConversionServiceFactoryBean.getStringToReferenciaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fran.programacion2.trabajofinal.domain.Referencia>() {
            public fran.programacion2.trabajofinal.domain.Referencia convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Referencia.class);
            }
        };
    }
    
    public Converter<Role, String> ApplicationConversionServiceFactoryBean.getRoleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fran.programacion2.trabajofinal.domain.Role, java.lang.String>() {
            public String convert(Role role) {
                return new StringBuilder().append(role.getRoleName()).append(' ').append(role.getRoleDescription()).toString();
            }
        };
    }
    
    public Converter<Long, Role> ApplicationConversionServiceFactoryBean.getIdToRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fran.programacion2.trabajofinal.domain.Role>() {
            public fran.programacion2.trabajofinal.domain.Role convert(java.lang.Long id) {
                return Role.findRole(id);
            }
        };
    }
    
    public Converter<String, Role> ApplicationConversionServiceFactoryBean.getStringToRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fran.programacion2.trabajofinal.domain.Role>() {
            public fran.programacion2.trabajofinal.domain.Role convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Role.class);
            }
        };
    }
    
    public Converter<SeguidoresSeguidos, String> ApplicationConversionServiceFactoryBean.getSeguidoresSeguidosToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fran.programacion2.trabajofinal.domain.SeguidoresSeguidos, java.lang.String>() {
            public String convert(SeguidoresSeguidos seguidoresSeguidos) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, SeguidoresSeguidos> ApplicationConversionServiceFactoryBean.getIdToSeguidoresSeguidosConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fran.programacion2.trabajofinal.domain.SeguidoresSeguidos>() {
            public fran.programacion2.trabajofinal.domain.SeguidoresSeguidos convert(java.lang.Long id) {
                return SeguidoresSeguidos.findSeguidoresSeguidos(id);
            }
        };
    }
    
    public Converter<String, SeguidoresSeguidos> ApplicationConversionServiceFactoryBean.getStringToSeguidoresSeguidosConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fran.programacion2.trabajofinal.domain.SeguidoresSeguidos>() {
            public fran.programacion2.trabajofinal.domain.SeguidoresSeguidos convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SeguidoresSeguidos.class);
            }
        };
    }
    
    public Converter<User, String> ApplicationConversionServiceFactoryBean.getUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fran.programacion2.trabajofinal.domain.User, java.lang.String>() {
            public String convert(User user) {
                return new StringBuilder().append(user.getFirstName()).append(' ').append(user.getLastName()).append(' ').append(user.getEmailAddress()).append(' ').append(user.getPassword()).toString();
            }
        };
    }
    
    public Converter<Long, User> ApplicationConversionServiceFactoryBean.getIdToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fran.programacion2.trabajofinal.domain.User>() {
            public fran.programacion2.trabajofinal.domain.User convert(java.lang.Long id) {
                return User.findUser(id);
            }
        };
    }
    
    public Converter<String, User> ApplicationConversionServiceFactoryBean.getStringToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fran.programacion2.trabajofinal.domain.User>() {
            public fran.programacion2.trabajofinal.domain.User convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), User.class);
            }
        };
    }
    
    public Converter<UserRole, String> ApplicationConversionServiceFactoryBean.getUserRoleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<fran.programacion2.trabajofinal.domain.UserRole, java.lang.String>() {
            public String convert(UserRole userRole) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, UserRole> ApplicationConversionServiceFactoryBean.getIdToUserRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, fran.programacion2.trabajofinal.domain.UserRole>() {
            public fran.programacion2.trabajofinal.domain.UserRole convert(java.lang.Long id) {
                return UserRole.findUserRole(id);
            }
        };
    }
    
    public Converter<String, UserRole> ApplicationConversionServiceFactoryBean.getStringToUserRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, fran.programacion2.trabajofinal.domain.UserRole>() {
            public fran.programacion2.trabajofinal.domain.UserRole convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), UserRole.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getHashtagToStringConverter());
        registry.addConverter(getIdToHashtagConverter());
        registry.addConverter(getStringToHashtagConverter());
        registry.addConverter(getMensajeToStringConverter());
        registry.addConverter(getIdToMensajeConverter());
        registry.addConverter(getStringToMensajeConverter());
        registry.addConverter(getPhotoToStringConverter());
        registry.addConverter(getIdToPhotoConverter());
        registry.addConverter(getStringToPhotoConverter());
        registry.addConverter(getReferenciaToStringConverter());
        registry.addConverter(getIdToReferenciaConverter());
        registry.addConverter(getStringToReferenciaConverter());
        registry.addConverter(getRoleToStringConverter());
        registry.addConverter(getIdToRoleConverter());
        registry.addConverter(getStringToRoleConverter());
        registry.addConverter(getSeguidoresSeguidosToStringConverter());
        registry.addConverter(getIdToSeguidoresSeguidosConverter());
        registry.addConverter(getStringToSeguidoresSeguidosConverter());
        registry.addConverter(getUserToStringConverter());
        registry.addConverter(getIdToUserConverter());
        registry.addConverter(getStringToUserConverter());
        registry.addConverter(getUserRoleToStringConverter());
        registry.addConverter(getIdToUserRoleConverter());
        registry.addConverter(getStringToUserRoleConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
